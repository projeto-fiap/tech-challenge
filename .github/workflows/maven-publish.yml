
name: pipeline

on:
  push:
  pull_request:
    types:
      - closed
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

  quality-gate:
    name: Testes unit√°rios
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Sonar Analysis
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn verify sonar:sonar -DsonarToken=$SONAR_TOKEN

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    needs: analysis-sonarqube

    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy DEV"
  deploy-hml:
    runs-on: ubuntu-latest
    environment:
      name: hml
    needs: analysis-sonarqube

    if: github.ref == 'refs/heads/release'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy HML"
  #    - name: Publish to GitHub Packages Apache Maven
  #        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
  #        env:
  #          GITHUB_TOKEN: ${{ github.token }}


  deploy-prd:
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: analysis-sonarqube

    if: github.ref == 'refs/heads/release'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy PRD"