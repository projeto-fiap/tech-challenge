name: pipeline

on:
  push:
  pull_request:
    types:
      - closed
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Clean and Compile
        run: mvn clean compile

  unit-tests:
    name: Analise do sonar + Testes unit√°rios
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn test jacoco:report sonar:sonar -DsonarToken=$SONAR_TOKEN

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    needs: unit-tests

    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy DEV"

  deploy-hml:
    runs-on: ubuntu-latest
    environment:
      name: hml
    needs: unit-tests

    if: github.ref == 'refs/heads/release'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy HML"

  deploy-prd:
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: unit-tests

    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy PRD"
